
exports.init = function(){

}

exports.schema = function(){
    var contentSchema = new GizmoCore.lib.mongoose.Schema({
        title :  {
            text : String,
            label : String
        },
        machine_name : String,
        description : String,
        fields : Object,
        creator : String,
        date  : Date
    });

    GizmoCore.Schema.Content = GizmoCore.db.model('Content',contentSchema, 'content');
}

exports.menu = function(){

    var menu = {};

    menu = {
        '/admin/content/create': {
            title : 'Create Content Type',
            callback: 'contentCreate',
            type : 'MENU_ADMIN_STRUCTURE',
            access : {
                callback : '',
                arguments : []
            },
            theme : 'admin'
        },
        '/admin/content/:id/edit': {
            title : 'Update Content',
            callback: 'contentCreate',
            type : 'MENU_ADMIN_CTYPE_ACTION',
            access : {
                callback : '',
                arguments : []
            },
            theme : 'admin'
        }
    };

    return menu;
}

exports.library = function () {
    var lib = [];

    lib = [
        {
            src : '/javascripts/node.behaviors.js',
            version : '1.0'
        }
    ];

    return { 'node' : lib };
}

exports.contentCreate = function(req, res, next){

    var form = GizmoCore.utils.forms.create({
        title: GizmoCore.utils.fields.string({
            required: true,
            validators: [GizmoCore.utils.validators.rangelength(3,20)]
        }),
        machine_name: GizmoCore.utils.fields.string({
            required: true,
            validators: [
                GizmoCore.utils.validators.rangelength(3,20),
                GizmoCore.utils.validators.regexp(/^[-\sa-zA-Z]+$/)
            ]
        }),
        title_label:  GizmoCore.utils.fields.password({
            required: true,
            data : 'Title Label',
            validators: [
                GizmoCore.utils.validators.rangelength(3,20)
//                ,GizmoCore.utils.validators.requiresFieldIfEmpty('title_label')
            ]
        })
    });

    if (req.method == 'POST'){

        form.handle(req, {
            success : function (form) {

                GizmoCore.Schema.Content.findOne({
                    $or : [
                        { machine_name : GizmoCore.input.post.machine_name },
                        { title : GizmoCore.input.post.title }
                    ]
                }, function(err, user){
                    console.log(user);
                    if (!user){
                        var content = GizmoCore.Schema.Content({
                            title : {
                                text : GizmoCore.input.post.title,
                                label : GizmoCore.input.post.title_label
                            },
                            machine_name : GizmoCore.input.post.machine_name,
                            description : GizmoCore.input.post.description
                        });

                        content.save();

                        GizmoCore.modules.ajax.commandInvoke('body', 'notify',{
                            type : 'success',
                            text : 'Content created successfully.'
                        });
                        GizmoCore.modules.ajax.commandInvoke('body','redirectUrl', { url : '/admin/structure' });
                    }else {
                        GizmoCore.modules.ajax.commandInvoke('body', 'notify',{
                            type : 'error',
                            text : 'Content type already exist.'
                        });
                    }

                    GizmoCore.render('node/content-create');
                });
            },
            error : function (form) {

                for(var field in form.fields){
                    if (form.fields[field].error != null){
                        GizmoCore.modules.ajax.commandInvoke('body', 'notify',{
                            type : 'error',
                            text : form.fields[field].error
                        });
                        GizmoCore.render('node/content-create');
                    }
                }
            }
        });
    }else {

        var data = {
            contentType :{
                id : null
            }
        };

        if (req.params.id){
            GizmoCore.Schema.Content.findOne({_id : req.params.id}, function(err, content){
                if (content){
                    data.contentType = content;
                    GizmoCore.render('node/content-create', data);
                }else {
                    GizmoCore.response.redirect('/admin/structure/');
                }
            });
        }else {
            GizmoCore.render('node/content-create', data);
        }

    }
}

exports.create = function(req, res, next){
    GizmoCore.render('node/create');
}
